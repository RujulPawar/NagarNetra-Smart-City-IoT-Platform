<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather Prediction</title>
    <link rel="icon" href="/logo.png" type="image/png">
    <link rel="stylesheet" href="/views/styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
    <style>
        .main-content {
            display: flex;
            flex-direction: column;
            height: calc(100vh - 40px); /* Adjust height to avoid taskbar overlap */
            padding: 20px;
            overflow-y: auto; /* Allow scrolling if needed */
        }

        .weather-container {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin: 20px;
            margin-bottom: 80px; /* Add extra margin at bottom to prevent overlap with taskbar */
        }

        .weather-card {
            background: white;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .current-weather {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }

        .weather-status {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
            padding: 10px;
            background: #f8f9fa;
            border-radius: 10px;
        }

        .status-icon {
            font-size: 28px;
            margin-right: 15px;
        }

        .status-normal { color: #28a745; }
        .status-warning { color: #ffc107; }
        .status-alert { color: #dc3545; }
        .status-steady { color: #17a2b8; }
        .status-falling { color: #6f42c1; }

        .hourly-forecast {
            display: flex;
            overflow-x: auto;
            gap: 15px;
            padding: 15px 0;
        }

        .forecast-item {
            flex: 0 0 auto;
            text-align: center;
            padding: 15px;
            border-radius: 10px;
            background: #f8f9fa;
            min-width: 80px;
        }

        .forecast-icon {
            font-size: 28px;
            margin: 8px 0;
        }

        .chart-container {
            position: relative;
            height: 300px;
            width: 100%;
        }

        .weather-header {
            display: flex;
            justify-content: space-between;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 10px;
            margin-bottom: 15px;
            gap: 20px;
        }

        .weather-metric {
            text-align: center;
            flex: 1;
        }

        .weather-value, .weather-status-text {
            font-size: 28px;
            font-weight: bold;
            margin-bottom: 4px;
        }

        .weather-metric h2 {
            font-size: 16px;
            font-weight: 600;
            margin: 0;
        }

        .weather-ranges {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            padding-top: 10px;
            gap: 5px;
        }

        .weather-ranges span {
            padding: 4px 8px;
            border-radius: 5px;
            font-size: 13px;
            font-weight: bold;
        }

        h1 {
            margin: 0;
            padding: 20px;
        }

        .weather-details {
            display: flex;
            justify-content: space-between;
            padding: 10px;
            background: #f8f9fa;
            border-radius: 10px;
            margin-bottom: 15px;
        }

        .weather-item {
            text-align: center;
        }

        .weather-item-value {
            font-size: 20px;
            font-weight: bold;
        }

        .full-width {
            grid-column: 1 / -1;
        }
    </style>
</head>
<body>
    <div class="sidebar">
        <div class="sidebar-logo">
            <img src="/logo.png" alt="NagarNetra Logo">
            <h1>NagarNetra</h1>
        </div>
        <ul class="sidebar-menu">
            <li><a href="/nagarnetra"><img src="/home.png" alt="Home Icon" class="menu-icon"><span>Home</span></a></li>
            <li><a href="/urbantrafficmanagement"><img src="/traffic.png" alt="Traffic Icon" class="menu-icon"><span>Urban Traffic Management</span></a></li>
            <li><a href="/environmentalmonitoring"><img src="/environment.png" alt="Environment Icon" class="menu-icon"><span>Environmental Monitoring</span></a></li>
            <li><a href="/publicsafety"><img src="/safety.png" alt="Safety Icon" class="menu-icon"><span>Public Safety</span></a></li>
            <li><a href="/maintenance"><img src="/maintenance.png" alt="Maintenance Icon" class="menu-icon"><span>System Maintenance</span></a></li>
        </ul>
    </div>
    <div class="main-content">
        <h1>Weather Prediction</h1>

        <div class="weather-container">
            <div class="weather-card">
                <div class="weather-header">
                    <div class="weather-metric">
                        <div class="weather-value" id="currentTemp">24.5°C</div>
                        <h2>Temperature</h2>
                    </div>
                    <div class="weather-metric">
                        <div class="weather-status-text" id="weatherCondition">Partly Cloudy</div>
                        <h2>Condition</h2>
                    </div>
                </div>
                <div class="chart-container">
                    <canvas id="temperatureChart"></canvas>
                </div>
                <div class="weather-ranges">
                    <span style="background: #00e400;">Cool (&lt;20°C)</span>
                    <span style="background: #ffff00;">Moderate (20-25°C)</span>
                    <span style="background: #ff7e00;">Warm (26-30°C)</span>
                    <span style="background: #ff0000;">Hot (&gt;30°C)</span>
                </div>
            </div>

            <div class="weather-card">
                <h2>Current Conditions</h2>
                <div class="weather-details">
                    <div class="weather-item">
                        <div class="weather-item-value" id="temperature">24.5°C</div>
                        <div>Temperature</div>
                    </div>
                    <div class="weather-item">
                        <div class="weather-item-value" id="humidity">65%</div>
                        <div>Humidity</div>
                    </div>
                    <div class="weather-item">
                        <div class="weather-item-value" id="pressure">1013 hPa</div>
                        <div>Pressure</div>
                    </div>
                    <div class="weather-item">
                        <div class="weather-item-value" id="windSpeed">6.2 km/h</div>
                        <div>Wind Speed</div>
                    </div>
                </div>
                <div class="weather-details">
                    <div class="weather-item">
                        <div class="weather-item-value" id="feelsLike">23.8°C</div>
                        <div>Feels Like</div>
                    </div>
                    <div class="weather-item">
                        <div class="weather-item-value" id="visibility">9.5 km</div>
                        <div>Visibility</div>
                    </div>
                    <div class="weather-item">
                        <div class="weather-item-value" id="dewPoint">19.2°C</div>
                        <div>Dew Point</div>
                    </div>
                    <div class="weather-item">
                        <div class="weather-item-value" id="lastUpdate">12:30:45</div>
                        <div>Last Update</div>
                    </div>
                </div>
                <div class="weather-status" id="forecastStatus">
                    <div class="status-icon" id="forecastIcon">
                        <i class="fas fa-cloud-sun status-normal"></i>
                    </div>
                    <div>
                        <h4 id="forecastText">Partly Cloudy conditions</h4>
                        <p id="forecastDescription">Expected to continue for the next few hours</p>
                    </div>
                </div>
            </div>

            <div class="weather-card full-width">
                <h2>Hourly Forecast</h2>
                <div class="hourly-forecast" id="hourlyForecast">
                    <!-- Hourly forecast items will be inserted here -->
                </div>
            </div>
        </div>
    </div>

    <script>
        // Initialize temperature chart with fixed data
        const ctx = document.getElementById('temperatureChart').getContext('2d');
        const temperatureChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: ['Now', '+1h', '+2h', '+3h', '+4h', '+5h', '+6h', '+7h', '+8h'],
                datasets: [{
                    label: 'Temperature (°C)',
                    data: [24.5, 25.2, 26.1, 26.8, 26.2, 25.3, 24.1, 23.2, 22.4],
                    fill: false,
                    borderColor: 'rgb(75, 192, 192)',
                    tension: 0.1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: false,
                        min: 20,  // Set minimum value for y-axis
                        max: 30   // Set maximum value for y-axis
                    }
                },
                animation: {
                    duration: 0  // Disable animations
                }
            }
        });

        // Weather condition icons for forecast (fixed)
        const weatherIcons = {
            'Clear': '<i class="fas fa-sun status-steady"></i>',
            'Partly Cloudy': '<i class="fas fa-cloud-sun status-normal"></i>',
            'Cloudy': '<i class="fas fa-cloud status-normal"></i>',
            'Light Rain': '<i class="fas fa-cloud-rain status-warning"></i>',
            'Rain': '<i class="fas fa-cloud-showers-heavy status-warning"></i>',
            'Thunderstorm': '<i class="fas fa-bolt status-alert"></i>'
        };

        // Fixed hourly forecast data - will not change with updates
        const hourlyData = [
            { time: 'Now', icon: '<i class="fas fa-cloud-sun status-normal"></i>', temp: 24 },
            { time: '13:00', icon: '<i class="fas fa-cloud status-normal"></i>', temp: 25 },
            { time: '14:00', icon: '<i class="fas fa-cloud status-normal"></i>', temp: 26 },
            { time: '15:00', icon: '<i class="fas fa-cloud-sun status-normal"></i>', temp: 27 },
            { time: '16:00', icon: '<i class="fas fa-sun status-steady"></i>', temp: 26 },
            { time: '17:00', icon: '<i class="fas fa-sun status-steady"></i>', temp: 25 },
            { time: '18:00', icon: '<i class="fas fa-cloud-sun status-normal"></i>', temp: 24 },
            { time: '19:00', icon: '<i class="fas fa-cloud-sun status-normal"></i>', temp: 23 },
            { time: '20:00', icon: '<i class="fas fa-cloud status-normal"></i>', temp: 22 },
            { time: '21:00', icon: '<i class="fas fa-cloud status-normal"></i>', temp: 21 },
            { time: '22:00', icon: '<i class="fas fa-cloud status-normal"></i>', temp: 20 },
            { time: '23:00', icon: '<i class="fas fa-cloud status-normal"></i>', temp: 19 }
        ];

        // Function to update hourly forecast
        function updateHourlyForecast() {
            const forecastContainer = document.getElementById('hourlyForecast');
            forecastContainer.innerHTML = '';

            hourlyData.forEach(hour => {
                const item = document.createElement('div');
                item.className = 'forecast-item';
                item.innerHTML = `
                    <div>${hour.time}</div>
                    <div class="forecast-icon">${hour.icon}</div>
                    <div>${hour.temp}°C</div>
                `;
                forecastContainer.appendChild(item);
            });
        }

        // Function to update only the last update time
        function updateLastUpdateTime() {
            // Update last update time
            const now = new Date();
            document.getElementById('lastUpdate').textContent = now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', second: '2-digit' });
        }

        // Initial call to set up the hourly forecast (only called once)
        updateHourlyForecast();

        // Set up interval to update only the timestamp every 5 seconds
        setInterval(updateLastUpdateTime, 5000);
    </script>
</body>
</html>